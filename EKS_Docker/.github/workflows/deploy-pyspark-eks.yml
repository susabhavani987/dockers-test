
name: Deploy PySpark Job to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/pyspark-eks:latest
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name my-eks-cluster --region us-east-2

      - name: Prepare K8s manifests
        run: |
          # Replace image reference
          sed -i "s|my-dockerhub-user/pyspark-eks:latest|${{ env.IMAGE }}|g" k8s/pyspark-job.yaml
          # Optionally replace IRSA role ARN placeholder
          sed -i "s|arn:aws:iam::717174411815:instance-profile/ec2-user-data-role|${{ secrets.IRSA_ROLE_ARN || 'arn:aws:iam::000000000000:role/placeholder' }}|g" k8s/serviceaccount.yaml

      - name: Apply K8s manifests
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/serviceaccount.yaml
          # If using secret-based auth (dev only), ensure secret exists out-of-band
          kubectl apply -f k8s/pyspark-job.yaml
